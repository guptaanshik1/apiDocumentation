openapi: "3.0.0" # version of open api
info:
  title: learn express and swagger # what this application is about
  description: a course segment about writing documentation
  version: 1.1.0 # version of this documentation
  contact:
    email: anshik@gmail.com
    url: "https://site.com"

# servers: # for all urls in production
#   - url: "https:/localhost:4000/api/v1"
#     description: for local host - secure
#   - url: "http:/localhost:4000/api/v1"
#     description: for local host - regular

servers: # for all urls in production
  - url: "{protocol}://localhost:4000/api/{version}"
    description: for local host - secure
    variables:
      version:
        enum: # to restrict the number of options
          - v1 # for version 1
          - v2 # for version 2
        default: v1
      protocol:
        enum: # to restrict the number of options
          - http
          - https
        default: http

components:
  securitySchemes: # on refreshing the test value will be gone
    cookieAuth:
      type: apiKey 
      in: cookie # come up from cookie
      name: token
    BearerAuth: # http authentication
      type: http
      scheme: bearer

paths:
  /course:
    get:
      tags:
        - String # all the paths related to this String group
      summary: returns a greet message from lco
      responses:
        200:
          description: All good and success
          content:
            application/json:
              schema:
                type: string
                example: "mystring"
        400:
          description: Bad request
        500:
          description: Internal server error

  /object:
    get:
      tags:
        - Object
      summary: returns a unique course
      responses:
        200:
          description: All good and success
          content:
            application/json:
              schema:
                type: object
                properties:  # only if there is an object
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number

                  # course: if object inside an object
                  #   type: object
                  #   properties

        400:
          description: Bad request
        500:
          description: Internal server error

  /courses:
    get:
      tags:
        - Array
      summary: returns all the courses
      responses:
        200:
          description: All good and success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:  # only if there is an object
                    id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number
        400:
          description: Bad request
        500:
          description: Internal server error

  /mycourse/{courseId}:
    get:
      tags:
        - String
      summary: returns course based on request id
      parameters: # for passing the information
        - name: courseId
          in: path
          required: flag
          default: 22
          schema:
            type: string

      responses:
        200:
          description: All good and success
          content:
            application/json:
              schema:
                type: object
                properties:  # only if there is an object
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
        400:
          description: Bad request
        500:
          description: Internal server error

  /addCourse:
    post:
      tags:
        - String
      summary: adds a new course to existing courses
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                price:
                  type: number
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: boolean
                
        400:
          description: Bad request
        500:
          description: internal server error

  /coursequery:
    get:
      tags:
        - String
      summary: trying to learn about query
      parameters:
        - name: location
          in: query
          required: true
          schema:
            type: string
            enum: [delhi, london, jaipur]
        - name: device
          in: query
          required: true
          schema:
            type: string
            enum: [web, mobile]
      responses:
        200:
          description: All good success
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                  value:
                    type: string
        400:
          description: Bad request
        500:
          description: internal server error

  /courseupload:
    post:
      tags:
        - String
      summary: uploading course image
      parameters:
        - in: header
          name: auth
      requestBody:
        content:
          multipart/form-data: # image will be passed to body as form data
            schema:
              type: object
              properties:
                file: # has to be same as defined in route file
                  type: string
                  format: binary
      responses:
        200:
          description: All good success
        400:
          description: Bad request
        500:
          description: internal server error

  # /addCourse:
  #   post:
  #     tags:
  #       - String
  #     summary: adds a new course to existing courses
  #     consumes: # what is being consumed
  #       - application/json
  #     produces: # what is being produced
  #       - application/json
  #     requestBody: # for sending something to the body
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #               properties:  # only if there is an object
  #                 id:
  #                   type: string
  #                 name:
  #                   type: string
  #                 price:
  #                   type: number
  #     responses:
  #       200:
  #         description: All good and success
  #         content:
  #           application/json:
  #             schema:
  #               type: 
  #       400:
  #         description: Bad request
  #       500:
  #         description: Internal server error